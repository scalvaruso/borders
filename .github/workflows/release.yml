name: Release Package

on:
  push:
    tags:
      - "v*"   # matches v1.4.0, v1.4.0-beta, v1.4.0-test, etc.
    branches:
      - dev    # optional: test from dev branch

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      dist-path: ${{ steps.set-dist-path.outputs.dist-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel twine setuptools_scm

      - name: Clean previous builds
        run: rm -rf dist/ build *.egg-info

      # ---------------------------
      # Strip 'v' prefix from tag
      # ---------------------------
      - name: Set version from tag
        id: set_version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version set to $VERSION"

      - name: Build package
        run: |
          # Build with exact version from tag
          python -m build --sdist --wheel

      - name: Set dist path output
        id: set-dist-path
        run: echo "dist-path=dist" >> $GITHUB_OUTPUT

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'test') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install twine
        run: python -m pip install --upgrade pip twine

      - name: Upload to TestPyPI
        run: python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
        env:
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          TWINE_USERNAME: __token__

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ !(contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'test')) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install twine
        run: python -m pip install --upgrade pip twine

      - name: Upload to PyPI
        run: python -m twine upload dist/*
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_USERNAME: __token__

  create-gh-release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ !(contains(github.ref_name, 'test')) }}  # skip real release for test tags
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
          allow_updates: false
          body: |
            ðŸš€ Release ${{ github.ref_name }}

            - Published automatically to TestPyPI/PyPI
            - Artifacts are attached below
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
